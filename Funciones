// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7 < 0.9.0;
// tambien se puede escribir pragma solidity ^0.8.0

//Recomendación, poner el mismo nombre del archivo o carpeta 
contract Funciones {

//Calculadora
int operador1;
int operador2;
int resultado; 

//funciones

//Reciben los parámetros, usar guin bajo para definir parámetro de variable de estado
function RecibirDatos (int _parametro1, int _parametro2) public{
    operador1 = _parametro1;
    operador2 = _parametro2;
}

//Funciones que no reciben parámetros 
function sumar () public {
    resultado = operador1 + operador2;
    //Resultado es donde se guardara la suma
}

//Funciones que regresan un valor 
function verResultado () public return(int){
    return resultado
}

//Funciones que regresna n valores
function verOperadores () public return (int,int){
    return (operador1, operador2);

}

//Storage y memory
/*las variables de estado siempre se gauarda en el storage - en la EMV - en la blockchain
todas las variables de estado se guardan en storage. "permanentemente". 
Peeero las funciones se guardan en memory, "de manera temporal"
Las variables que declaro en funciones no se guardan en storage si no en la memory, se guarda
temporal a diferencia de las demás variables

Los parámetros tambien se guardan de manera temporal, con los valores de tipo string
va a dar un error ya que es necesario almacenar este dato en memory antes de seguir*/

}

